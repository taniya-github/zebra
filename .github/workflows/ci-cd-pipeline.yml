name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    # runs-on: ubuntu-latest  # Use the self-hosted CentOS runner (or remove if using GitHub-hosted runners)
    runs-on: self-hosted
    steps:
      # 0. Print user
      - name: Show current user
        run: whoami
     
      # 1. Checkout the latest code
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          repository: taniya-github/zebra  # Your GitHub repository name
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}  # SSH key for accessing the repo

      # 2. Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3. Install Docker Compose
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version  # Verify installation

      # 4. Build and run Docker containers using Docker Compose
      #- name: Build and run Docker containers1
        #run: |
          #docker-compose -f docker-compose.yml up -d --build
      
     
       # 5. Deploy to CentOS VM (Target)
      - name: Deploy to CentOS VM
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa  # Correct permissions
          chmod 700 ~/.ssh         # Ensure directory permissions are correct
          ssh-keyscan -H localhost >> ~/.ssh/known_hosts  # Add localhost to known hosts

          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa admin@localhost << EOF
            # Setup deployment directory
            mkdir -p /home/admin/cicd_target
            cd /home/admin/cicd_target

            # Clone the repository and deploy the application
            git clone git@github.com:taniya-github/zebra.git .
            docker-compose -f docker-compose.yml down
            docker-compose -f docker-compose.yml up -d --build
          EOF
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

